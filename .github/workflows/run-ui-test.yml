name: Run UI Test

on:
  workflow_call:
    inputs:
      platform:
        description: 'Platform (Web/Mobile/Desktop)'
        type: string
        default: web
      environment:
        description: 'Environment(int/uat/pprod)'
        type: string
        default: uat
      os:
        description: 'Operative System (Mac/Win/Linux)'
        type: string
        default: 'win'
      os-version:
        description: 'OS version Win(8/10/11)'
        type: string
        default: WIN_11
      browser:
        description: 'Browser'
        type: string
        default: ''
      addtional-path:
        description: 'Additional Path'
        type: string
        required: false
      include-history:
        description: 'Include test history'
        type: boolean
        required: false
        default: false

jobs:
  pre-test:
    name: Pre-test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        if: ${{ inputs.include-history }}
        with:
          ref: gh_pages

      - name: Upload Report
        uses: actions/upload-artifact@v2
        if: always() && ${{ inputs.include-history }}
        with:
          name: ${{ inputs.platform }}-${{ inputs.os }}-${{ inputs.browser }}-allure-history
          path: ${{ inputs.platform }}/${{ inputs.os }}/${{ inputs.browser }}/history

  test:
    name: Test
    runs-on: ubuntu-latest
    needs:
      - pre-test
    steps:
      - uses: actions/checkout@v4
  
      - name: Setup JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'
  
      - name: Run Tests
        run: make test
        env:
          PLATFORM: ${{ inputs.platform }}
          OS: ${{ inputs.os }}
          BROWSER: ${{ inputs.browser }}
          SAUCE_USERNAME: ${{ secrets.SAUCE_USERNAME }}
          SAUCE_ACCESS_KEY: ${{ secrets.SAUCE_ACCESS_KEY }}

      - name: Add history
        if: ${{ inputs.include-history }}
        uses: actions/download-artifact@v3
        with:
          name: ${{ inputs.platform }}-${{ inputs.os }}-${{ inputs.browser }}-allure-history
          path: target/allure-results/history


      - name: Upload results
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: ${{ inputs.platform }}_${{ inputs.os }}_${{ inputs.browser }}_allure-results
          path: target/allure-results
          retention-days: 1
  
      - name: Generate Report
        run: make report

      - name: Generate Executors
        run: |
          echo '[{"name":"GitHub","type":"github","buildName":"${{ github.action }}#${{ github.run_number }}","buildUrl":"${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"}]' > executors.json
          mv executors.json target/site/allure-maven-plugin/widgets

      - name: Upload Report
        uses: actions/upload-artifact@v2
        if: always()
        with:
         name: ${{ inputs.platform }}_${{ inputs.os }}_${{ inputs.browser }}_allure-report
         path: target/site/allure-maven-plugin


  report:
    name: Report
    needs: 
      - test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          ref: gh_pages

      - name: Get Page Artifact
        uses: actions/download-artifact@v3
        with:
          name: ${{ inputs.platform }}_${{ inputs.os }}_${{ inputs.browser }}_allure-report
          path: ${{ inputs.platform }}/${{ inputs.os }}/${{ inputs.browser }}

      - name: Create Branch and Push Results
        run: |
          git config --local user.email "actions@users.noreply.github.com"
          git config --local user.name "GitHub Actions"
          branch_name="${{ inputs.platform }}_${{ inputs.os }}_${{ inputs.browser }}"
          git checkout -b "$branch_name"
          git add ${{ inputs.platform }}/${{ inputs.browser }}
          git commit -m "Results for $branch_name"
          git push origin "$branch_name"
          
          git config pull.rebase true
          
          needs_update=$(git rev-list HEAD...origin/gh_pages --count)
          
          if [ $needs_update -ne 0 ]; then
            git fetch origin gh_pages
            git checkout "$branch_name"
            git pull origin gh_pages
          
            if ! git merge origin/gh_pages; then
              git pull --rebase origin gh_pages
              sleep 5  # Espera 5 segundos
              git merge origin/gh_pages
            fi
          
            retries=10
            while [ $retries -gt 0 ]; do
              if ! git push origin "$branch_name":gh_pages; then
                ((retries--))
                git pull origin gh_pages
                echo "Retrying... $retries attempts left"
              else
                break
              fi
            done
          fi

      - name: Apagar a nova branch
        if: always()
        run: |
          branch_name="${{ inputs.platform }}_${{ inputs.os }}_${{ inputs.browser }}"
          git push --delete origin "$branch_name"      